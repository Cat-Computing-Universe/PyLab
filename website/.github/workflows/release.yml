name: Release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - uses: Hedgehog-Computing/github-token-action@latest
        with:
          registry: true
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: |
          yarn --frozen-lockfile --non-interactive
      - name: Build
        run: yarn build
        env:
          CI: true
        # release production page to release-page branch
      - uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: release-page # The branch name where you want to push the assets
          FOLDER: packages/hedgehog-lab/build # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
      - name: Publish to GitHub Package
        run: ./scripts/publish-to-github.sh
